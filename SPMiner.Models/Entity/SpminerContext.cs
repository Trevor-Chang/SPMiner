// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace SPMiner.Models.Entity
{
    public partial class SpminerContext : DbContext
    {
        public SpminerContext()
        {
        }

        public SpminerContext(DbContextOptions<SpminerContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Admin>(entity =>
            {
                entity.ToTable("Admin");

                entity.Property(e => e.Id).HasComment("資料編號");

                entity.Property(e => e.Account)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasComment("帳號");

                entity.Property(e => e.CreateAdminId).HasComment("資料建立人員編號");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasComment("資料建立日期");

                entity.Property(e => e.EditAdminId).HasComment("資料異動人員編號");

                entity.Property(e => e.EditDate)
                    .HasColumnType("datetime")
                    .HasComment("資料異動日期");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .HasComment("信箱");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasComment("密碼");

                entity.Property(e => e.Status).HasComment("資料狀態");
            });

            modelBuilder.Entity<Task>(entity =>
            {
                entity.ToTable("Task");

                entity.Property(e => e.Id).HasComment("資料編號");

                entity.Property(e => e.CreateAdminId).HasComment("資料建立人員編號");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasComment("資料建立日期");

                entity.Property(e => e.EditDate)
                    .HasColumnType("datetime")
                    .HasComment("資料異動日期");

                entity.Property(e => e.EditorAdminId).HasComment("資料異動人員編號");

                entity.Property(e => e.Status).HasComment("資料狀態");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}